# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

'''
This query outputs a table of HTTP error and total request count per service.

This query is for use with Grafana's Pixie Datasource Plugin only,
as it uses Grafana macros for adding Grafana dashboard context.
'''

# Import Pixie's module for querying data.
import px

# Import HTTP events table.
df = px.DataFrame(table='http_events', start_time='-5m')

# Add columns for service, namespace info.
df.namespace = df.ctx['namespace']
df.service = df.ctx['service']

# Filter out requests that don't have a service defined.
df = df[df.service != '']

# Filter out requests from the Pixie (pl) namespace.
df = df[df.namespace != 'pl']

# Add column for HTTP response status errors.
df.error = df.resp_status >= 400

# Group HTTP events by service, counting errors and total HTTP events.
df = df.groupby(['service']).agg(
    error_count=('error', px.sum),
    total_requests=('resp_status', px.count)
)

# Output the DataFrame.
px.display(df)
