import px

bytes_per_gb = 1024 * 1024 * 1024
ingress_cost_per_gib = 0
egress_cost_per_gib = 0.012


def hourly_egress_by_pod():
    # Load the last 1 hr of Pixie's `conn_stats` table into a Dataframe.
    # The `conn_stats` table contains contains statistics on the communications
    # made between client-server pairs.
    df = px.DataFrame(table='conn_stats', start_time="-1h")

    # Add K8s context using the table record's UPID.
    df.service = df.ctx['service']

    # Filter out anything where anything remote_addr resolves a pod
    df.remote_addr_pod = px.pod_id_to_pod_name(px.ip_to_pod_id(df.remote_addr))
    df = df[df.remote_addr_pod == '']

    # Find min/max bytes transferred over the selected time window per pod.
    df = df.groupby('service').agg(
        bytes_recv_min=('bytes_recv', px.min),
        bytes_recv_max=('bytes_recv', px.max),
        bytes_sent_min=('bytes_sent', px.min),
        bytes_sent_max=('bytes_sent', px.max),
    )

    # Calculate bytes transferred over the time window
    df.bytes_sent = df.bytes_sent_max - df.bytes_sent_min
    df.bytes_recv = df.bytes_recv_max - df.bytes_recv_min

    # Sum network traffic per unique pair of 'service' and 'pod'.
    df = df.groupby('service').agg(
        bytes_sent=('bytes_sent', px.sum),
        bytes_recv=('bytes_recv', px.sum),
    )
    df.gb_egress = df.bytes_sent / bytes_per_gb
    df.gb_ingress = df.bytes_recv / bytes_per_gb
    return df


def yearly_egress_cost_by_service():
    df = hourly_egress_by_pod()
    df.egress_cost_per_year = df.gb_egress * 24 * 365 * egress_cost_per_gib
    df.ingress_cost_per_year = df.gb_ingress * 24 * 365 * ingress_cost_per_gib
    df.network_cost_per_year = df.egress_cost_per_year + df.ingress_cost_per_year
    return df[['service', 'network_cost_per_year']]


def yearly_egress_cost():
    df = yearly_egress_cost_by_service()
    return df.agg(
       network_cost_per_year=('network_cost_per_year', px.sum)
    )


df = yearly_egress_cost_by_service()
px.display(df, 'Egress Cost By Service (Yearly)')

df = yearly_egress_cost()
px.display(df, 'Egress Cost (Yearly)')
