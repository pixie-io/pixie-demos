{"version":3,"sources":["ColumnSelector.module.css","Table.module.css","Filter.module.css","utils/useData.js","Filter.js","ColumnSelector.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","randomFrom","array","Math","floor","random","length","generateRow","minTimestamp","maxTimestamp","status","timestamp","latencyMs","endpoint","columns","Header","Cell","value","className","Date","toLocaleString","accessor","color","digit","split","range","Filter","onChange","React","setValue","onChangeWrapper","event","v","target","trim","styles","type","placeholder","ColumnSelector","Label","Checkboxes","map","column","Checkbox","getToggleHiddenProps","id","Table","data","reactTable","useTable","useFlexLayout","useGlobalFilter","useSortBy","useResizeColumns","getTableProps","getTableBodyProps","headerGroups","rows","allColumns","prepareRow","setGlobalFilter","group","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getResizerProps","ResizeHandle","isResizing","ResizeHandleActive","filter","x","join","row","getRowProps","cells","cell","getCellProps","App","numRows","now","Array","fill","useStaticData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38b20cdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColumnSelector\":\"ColumnSelector_ColumnSelector__1LtuL\",\"Label\":\"ColumnSelector_Label__Znnco\",\"Checkbox\":\"ColumnSelector_Checkbox__3CcNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__gTzsf\",\"ResizeHandle\":\"Table_ResizeHandle__1LDIp\",\"ResizeHandleActive\":\"Table_ResizeHandleActive__-UEDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3qIm_\"};","import * as React from 'react';\n\nconst TimestampCell = ({ value }) => (\n  <span className='Cell-Timestamp'>\n    <span>{new Date(value).toLocaleString()}</span>\n  </span>\n);\nconst LatencyCell = ({ value }) => {\n  let color = 'bad';\n  if (value <= 50) color = 'good';\n  else if (value <= 100) color = 'weak';\n\n  return <span className={`Cell-Latency ${color}`}>{ value }</span>;\n};\nconst EndpointCell = ({ value }) => {\n  return <span className='Cell-Endpoint'>{ value }</span>;\n};\nconst StatusCell = ({ value }) => {\n  const digit = +value.split(' ')[0];\n  let range = 500;\n  if (digit < 300) range = 200;\n  else if (digit < 400) range = 300;\n  else if (digit < 500) range = 400;\n  return <span className={`Cell-StatusCode range-${range}`}>{ value }</span>;\n};\n\nfunction randomFrom(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nfunction generateRow(minTimestamp, maxTimestamp) {\n  const status = randomFrom([\n    '200 OK', '301 Moved Permanently', '404 Not Found', \"418 I'm a teapot\", '501 Not Implemented'\n  ]);\n  return {\n    timestamp: minTimestamp + Math.floor(Math.random() * (maxTimestamp - minTimestamp)),\n    latencyMs: 5 + Math.floor(Math.random() * 150),\n    // Fun bit of lore: https://wiki.ubuntu.com/DevelopmentCodeNames\n    endpoint: '/user/' + randomFrom([\n      'bendy-badger', 'happy-hippo', 'giant-ape', 'grumpy-groundhog', 'phlegmatic-pheasant'\n    ]),\n    status,\n  };\n}\n\nconst columns = [\n  { Header: 'Timestamp', Cell: TimestampCell, accessor: 'timestamp' },\n  { Header: 'Latency',   Cell: LatencyCell,   accessor: 'latencyMs' },\n  { Header: 'Endpoint',  Cell: EndpointCell,  accessor: 'endpoint' },\n  { Header: 'Status',    Cell: StatusCell,    accessor: 'status' },\n];\n\n// react-table expects memoized columns and data, so we export a React hook to permit doing that.\nexport function useStaticData(numRows = 20) {\n  const data = React.useMemo(() => {\n    const maxTimestamp = Date.now();\n    const minTimestamp = maxTimestamp - (1000 * 60 * 60 * 24 * 7);\n    return Array(numRows).fill(0).map(() => generateRow(minTimestamp, maxTimestamp));\n  }, [numRows]);\n  return { columns, data };\n}\n","import * as React from 'react';\n\nimport styles from './Filter.module.css';\n\nexport default function Filter({ onChange }) {\n  const [value, setValue] = React.useState('');\n\n  const onChangeWrapper = React.useCallback((event) => {\n    const v = event.target.value.trim();\n    setValue(v);\n    onChange(v);\n  }, [onChange]);\n\n  return (\n    <div className={styles.Filter}>\n      <input type=\"text\" value={value} placeholder='Search rows...' onChange={onChangeWrapper} />\n    </div>\n  );\n}","import styles from './ColumnSelector.module.css';\n\nexport default function ColumnSelector({ columns }) {\n  return (\n    <div className={styles.ColumnSelector}>\n      <div className={styles.Label}>Show Columns:</div>\n      <div className={styles.Checkboxes}>\n        {columns.map(column => (\n          <div key={column.id} className={styles.Checkbox}>\n            <label>\n              <input type='checkbox' {...column.getToggleHiddenProps()} />\n              {` ${column.Header}`}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}","import * as React from 'react';\n\nimport styles from './Table.module.css'\nimport Filter from './Filter.js';\nimport ColumnSelector from './ColumnSelector.js';\nimport {\n  useTable,\n  useFlexLayout,\n  useGlobalFilter,\n  useSortBy,\n  useResizeColumns,\n} from 'react-table';\n\nimport './Table.css';\n\nexport default function Table({ data: { columns, data } }) {\n  const reactTable = useTable({\n      columns,\n      data\n    },\n    useFlexLayout,\n    useGlobalFilter,\n    useSortBy,\n    useResizeColumns\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    allColumns,\n    prepareRow,\n    setGlobalFilter\n  } = reactTable;\n\n  return (\n    <div className='Table-root'>\n      <header>\n        <ColumnSelector columns={allColumns} />\n        <Filter onChange={setGlobalFilter} />\n      </header>\n      <table {...getTableProps()} className={styles.Table}>\n        <thead>\n          {headerGroups.map(group => (\n            <tr {...group.getHeaderGroupProps()}>\n              {group.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  <div {...column.getSortByToggleProps()}>\n                    {column.render('Header')}\n                    <span>\n                      {column.isSorted ? (\n                        column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼'\n                      ): ''}\n                    </span>\n                  </div>\n                  <div {...column.getResizerProps()} className={[styles.ResizeHandle, column.isResizing && styles.ResizeHandleActive].filter(x=>x).join(' ')}>\n                    &#x22EE;\n                  </div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}","import * as React from 'react';\n\nimport { useStaticData } from './utils/useData.js';\nimport Table from './Table.js';\n\nimport './App.css';\n\nfunction App() {\n  const data = useStaticData(100);\n  return (\n    <main className=\"App\">\n      <Table data={data} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}